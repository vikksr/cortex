= context[:form].fields_for 'field_items', field_item do |field_item_form|
  - if field_item.field.field_type_instance.class == TextFieldType
    - if render_method
      %a.mdl-button.mdl-js-button.mdl-button--raised.mdl-button--colored#displayImage{ style: 'padding:0;box-shadow:none;float:none;display:block;width:100%;'}
        %span{style:'margin-right: 10px;'} Display Image
        %i.material-icons wallpaper
      = cell(Plugins::Core::TextCell, field_item, form: field_item_form, input_options: input, label_options: label).(render_method)
    - else
      = cell(Plugins::Core::TextCell, field_item, form: field_item_form, input_options: input, label_options: label).(:input)

  - if field_item.field.field_type_instance.class == BooleanFieldType
    = cell(Plugins::Core::BooleanCell, field_item, form: field_item_form, field_name: field_item.field.name, default_value: false, input_options: input, label_options: label).(:checkbox)

  - if field_item.field.field_type_instance.class == TreeFieldType
    = cell(Plugins::Core::TreeCell, field_item, form: field_item_form, metadata: field_item.field.metadata["allowed_values"], field: field, input_options: input, label_options: label).(render_method)

  - if field_item.field.field_type_instance.class == DateTimeFieldType
    = cell(Plugins::Core::DateTimeCell, field_item, form: field_item_form, default_value: '', input_options: input, label_options: label).(:datepicker)

  - if field_item.field.field_type_instance.class == TagFieldType
    = cell(Plugins::Core::TagCell, field_item, form: field_item_form, default_value: [], input_options: input, label_options: label).(:tag_picker)

  - if field_item.field.field_type_instance.class == UserFieldType
    = cell(Plugins::Core::UserCell, field_item, form: field_item_form, default_value: User.all.first.id, user_data: User.all, input_options: input, label_options: label).(:dropdown)

  - if field_item.field.field_type_instance.class == AssetFieldType
    = cell(Plugins::Core::AssetCell, field_item, form: field_item_form, input_options: input, label_options: label).(:input)
